name: prebuild

on:
  push:
    paths:
      - ".github/workflows/prebuild.yml"
  pull_request:
    paths:
      - ".github/workflows/prebuild.yml"

permissions: write-all

jobs:
  windows_build:
    runs-on: [self-hosted, win10-3080]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build MMDeploy
        run: |
          . D:\DEPS\cienv\prebuild_gpu_env.ps1
          conda activate mmdeploy-3.6
          mkdir pack; cd pack
          python ../tools/package_tools/generate_build_config.py --backend 'trt;ort' `
            --system windows --output config.yml --build-mmdeploy
          python ../tools/package_tools/mmdeploy_builder.py --config config.yml
      - name: Build sdk cpu backend
        run: |
          . D:\DEPS\cienv\prebuild_cpu_env.ps1
          conda activate mmdeploy-3.6
          cd pack
          python ../tools/package_tools/generate_build_config.py --backend 'ort' `
            --system windows --output config.yml --device cpu --build-sdk --build-sdk-monolithic `
            --build-sdk-python --sdk-dynamic-net
          python ../tools/package_tools/mmdeploy_builder.py --config config.yml
      - name: Build sdk cuda backend
        run: |
          . D:\DEPS\cienv\prebuild_gpu_env.ps1
          conda activate mmdeploy-3.6
          cd pack
          python ../tools/package_tools/generate_build_config.py --backend 'ort;trt' `
            --system windows --output config.yml --device cuda --build-sdk --build-sdk-monolithic `
            --build-sdk-python --sdk-dynamic-net
          python ../tools/package_tools/mmdeploy_builder.py --config config.yml
      - name: Move artifact
        run: |
          New-Item "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID" -ItemType Directory -Force
          Move-Item pack/* "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID"

  windows_test:
    runs-on: [self-hosted, win10-3080]
    needs: windows_build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Test python
        run: |
          cd "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID"
          . D:\DEPS\cienv\prebuild_cpu_env.ps1
          conda activate ci-test
          & "$env:GITHUB_WORKSPACE/tools/package_tools/test/test_sdk_python.ps1"
      - name: Test c/cpp
        run: |
          cd "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID"
          . D:\DEPS\cienv\prebuild_cpu_env.ps1
          & "$env:GITHUB_WORKSPACE/tools/package_tools/test/test_sdk.ps1"

  windows_upload:
    runs-on: [self-hosted, win10-3080]
    if: startsWith(github.ref, 'refs/tags/')
    environment: 'prod'
    needs: windows_test
    steps:
      - name: Upload mmdeploy
        run: |
          cd "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID/mmdeploy"
          # twine upload * -u __token__ -p ${{ secrets.pypi_password }}
      - name: Upload mmdeploy_python
        run: |
          cd "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID/mmdeploy_python"
          # twine upload * -u __token__ -p ${{ secrets.pypi_password }}
      - name: Zip mmdeploy sdk
        run: |
          cd "D:/DEPS/ciartifact/$env:GITHUB_RUN_ID/sdk"
          $folders = $(ls).Name
          foreach ($folder in $folders) {
            Compress-Archive -Path $folder -DestinationPath "$folder.zip"
          }
      - name: Upload mmdeploy sdk
        uses: softprops/action-gh-release@v1
        with:
          files: |
              D:/DEPS/ciartifact/${{github.run_id}}/sdk/*.zip
